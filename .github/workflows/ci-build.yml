name: Build

on:
  pull_request:
    branches:
      - release-*

  push:
    branches:
      - develop
      - release-*
      - "!main"


jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK for Spring Boot
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Build the Spring Boot application
      - name: Build with Maven
        run: mvn clean package -DskipTests -f rbnk/pom.xml

      # Step 4: Run tests (optional)
      - name: Run tests
        run: mvn test -f rbnk/pom.xml 

      # Step 5: Set up creds
      - name: Configure AWS credentials
        if: ${{ github.event_name != 'pull_request' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # Step 6: Get the repository and branch name
      - name: Get repository and branch name
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"  # Extract repo name (e.g., rnbk)
          BRANCH_NAME="${GITHUB_REF##*/}"       # Extract branch name (e.g., main)
          IMAGE_TAG="${BRANCH_NAME}"  # Create image tag with branch
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV  # Save to GITHUB_ENV for later use
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      # Step 7: Build Docker image
      - name: Build Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker build -t $IMAGE_TAG .

      # Step 8: Login to ECR
      - name: Login to Amazon ECR
        if: ${{ github.event_name != 'pull_request' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 9: Tag the Docker image for ECR
      - name: Tag Docker image for ECR
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker tag $IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/docker/$REPO_NAME:$IMAGE_TAG

      # Step 10: Push Docker image to ECR
      - name: Push Docker image to ECR
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/docker/$REPO_NAME:$IMAGE_TAG
          